/**
 * ICEQ (2025) - –°–∫—Ä–∏–ø—Ç—ã –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 * 
 * –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:
 * - –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
 * - –ê–Ω–∏–º–∞—Ü–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
 * - –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤ –ø–æ –∫–∞—Ä—Ç–æ—á–∫–∞–º
 */

class HomePage {
    constructor() {
        this.init();
    }

    init() {
        console.log('üèóÔ∏è [HOME] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...');
        
        this.initNavigation();
        this.initStatsAnimation();
        this.initCardHoverEffects();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        this.showInitialState();
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        this.loadUserStats();
        
        console.log('‚úÖ [HOME] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–æ –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏
     */
    showInitialState() {
        const limitNotice = document.getElementById('free-tests-limit');
        const limitText = limitNotice?.querySelector('.limit-text');
        const limitIcon = limitNotice?.querySelector('.limit-icon');
        
        if (limitText) {
            limitText.innerHTML = '–ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...';
        }
        if (limitIcon) {
            limitIcon.textContent = '‚è≥';
        }
        if (limitNotice) {
            limitNotice.style.background = 'linear-gradient(135deg, #6c757d, #495057)';
        }
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
     */
    initNavigation() {
        const createTestBtn = document.getElementById('create-test-btn');
        const takeTestBtn = document.getElementById('take-test-btn');

        // –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ - —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ HTML —Å—Å—ã–ª–∫–∏
        // –≠—Ç–æ —É—Å—Ç—Ä–∞–Ω—è–µ—Ç –ª—é–±—ã–µ JS –∑–∞–¥–µ—Ä–∂–∫–∏
    }

    /**
     * –ù–∞–≤–∏–≥–∞—Ü–∏—è –Ω–∞ –¥—Ä—É–≥—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É (—É–¥–∞–ª–µ–Ω–∞ - –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º—ã–µ —Å—Å—ã–ª–∫–∏)
     */
    // navigateTo() –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–∞

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å—á–µ—Ç—á–∏–∫–æ–≤
     */
    initStatsAnimation() {
        // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ Counter.js
        if (!window.AnimatedCounter) {
            setTimeout(() => this.initStatsAnimation(), 100);
            return;
        }
        
        // –°–æ–∑–¥–∞–µ–º –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—á–µ—Ç—á–∏–∫–∏
        this.counters = {
            tests: window.createCounter('#tests-counter', {
                value: 0,
                size: 'large',
                theme: 'primary',
                duration: 800,
                fontSize: 48
            }),
            questions: window.createCounter('#questions-counter', {
                value: 0,
                size: 'large',
                theme: 'success',
                duration: 1000,
                fontSize: 48
            }),
            accuracy: window.createCounter('#accuracy-counter', {
                value: 0,
                size: 'large',
                theme: 'info',
                duration: 1200,
                fontSize: 48
            })
        };
        
        console.log('‚úÖ [STATS] –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—á–µ—Ç—á–∏–∫–∏ —Å–æ–∑–¥–∞–Ω—ã:', this.counters);
        
        // –°–æ–∑–¥–∞–µ–º –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –ø—Ä–∏ –ø–æ—è–≤–ª–µ–Ω–∏–∏ –≤ –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏
        const statsSection = document.getElementById('stats-section');
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    this.animateStats();
                    observer.unobserve(entry.target);
                }
            });
        }, {
            threshold: 0.5
        });

        observer.observe(statsSection);
    }

    /**
     * –ê–Ω–∏–º–∞—Ü–∏—è —Å—á–µ—Ç—á–∏–∫–æ–≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
     */
    animateStats() {
        console.log('üé¨ [STATS] –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —Å—á–µ—Ç—á–∏–∫–æ–≤...');
        
        // –ê–Ω–∏–º–∏—Ä—É–µ–º —Å—á–µ—Ç—á–∏–∫–∏ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
        setTimeout(() => {
            if (this.counters.tests) {
                const target = parseInt(document.getElementById('tests-counter').getAttribute('data-target')) || 150;
                this.counters.tests.setValue(target);
            }
        }, 200);
        
        setTimeout(() => {
            if (this.counters.questions) {
                const target = parseInt(document.getElementById('questions-counter').getAttribute('data-target')) || 2340;
                this.counters.questions.setValue(target);
            }
        }, 400);
        
        setTimeout(() => {
            if (this.counters.accuracy) {
                const target = parseInt(document.getElementById('accuracy-counter').getAttribute('data-target')) || 98;
                this.counters.accuracy.setValue(target);
            }
        }, 600);
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∏
     */
    initCardHoverEffects() {
        const actionCards = document.querySelectorAll('.action-card');
        
        actionCards.forEach(card => {
            card.addEventListener('mouseenter', (e) => {
                this.addCardRipple(e);
            });
        });
    }

    /**
     * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∞ ripple –∫ –∫–∞—Ä—Ç–æ—á–∫–µ
     */
    addCardRipple(event) {
        const card = event.currentTarget;
        const rect = card.getBoundingClientRect();
        const x = event.clientX - rect.left;
        const y = event.clientY - rect.top;

        const ripple = document.createElement('div');
        ripple.className = 'ripple-effect';
        ripple.style.left = x + 'px';
        ripple.style.top = y + 'px';

        card.appendChild(ripple);

        setTimeout(() => {
            ripple.remove();
        }, 600);
    }

    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
     */
    async loadUserStats() {
        console.log('üìä [STATS] –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...');
        
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
            if (!window.iceqBase || !window.iceqBase.fetchAPI) {
                throw new Error('API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
            }
            
            console.log('üì° [STATS] –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–µ–º–∏—É–º–∞...');
            // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–µ–º–∏—É–º–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞
            const premiumResponse = await window.iceqBase.fetchAPI('/premium/status');
            console.log('üì• [STATS] –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', premiumResponse);
            
            const localStats = this.getUserStatsFromLocalStorage();
            console.log('üíæ [STATS] –õ–æ–∫–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:', localStats);
            
            // –û–±—ä–µ–¥–∏–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –¥–∞–Ω–Ω—ã–º–∏ —Å–µ—Ä–≤–µ—Ä–∞
            const stats = {
                ...localStats,
                isPremium: premiumResponse.premium_active,
                maxTests: premiumResponse.features.daily_tests_limit,
                testsRemaining: premiumResponse.premium_active ? 
                    (localStats.testsRemaining >= 0 ? localStats.testsRemaining : 50) : 
                    (localStats.testsRemaining >= 0 ? localStats.testsRemaining : 5)
            };
            
            console.log('‚úÖ [STATS] –û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:', stats);
            
            this.updateStatsDisplay(stats);
            this.updateLimitsDisplay(stats);
            this.saveUserStats(stats);
            
        } catch (error) {
            console.error('‚ùå [STATS] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
            console.error('‚ùå [STATS] Stack trace:', error.stack);
            
            // Fallback –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            const stats = this.getUserStatsFromLocalStorage();
            console.log('üîÑ [STATS] –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ fallback:', stats);
            
            this.updateStatsDisplay(stats);
            this.updateLimitsDisplay(stats);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            if (window.iceqBase && window.iceqBase.showToast) {
                window.iceqBase.showToast('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å —Å–µ—Ä–≤–µ—Ä–∞', 'warning');
            }
        }
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
     */
    getUserStatsFromLocalStorage() {
        const defaultStats = {
            testsCreated: 0,
            questionsGenerated: 0,
            testsRemaining: 5,
            isPremium: false,
            maxTests: 5
        };

        try {
            const saved = localStorage.getItem('iceq_user_stats');
            if (saved) {
                const parsedStats = JSON.parse(saved);
                return { ...defaultStats, ...parsedStats };
            }
        } catch (error) {
            console.error('‚ùå [STATS] –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ localStorage:', error);
        }
        
        return defaultStats;
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
     */
    updateStatsDisplay(stats) {
        console.log('üìä [STATS] –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏:', stats);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–æ–≤
        if (this.counters) {
            if (this.counters.tests && stats.testsCreated !== undefined) {
                this.counters.tests.setValue(stats.testsCreated);
                document.getElementById('tests-counter').setAttribute('data-target', stats.testsCreated);
            }
            
            if (this.counters.questions && stats.questionsGenerated !== undefined) {
                this.counters.questions.setValue(stats.questionsGenerated);
                document.getElementById('questions-counter').setAttribute('data-target', stats.questionsGenerated);
            }
            
            // –ü—Ä–æ—Ü–µ–Ω—Ç —Ç–æ—á–Ω–æ—Å—Ç–∏ –æ—Å—Ç–∞–µ—Ç—Å—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç–æ–π (98%)
            if (this.counters.accuracy) {
                this.counters.accuracy.setValue(98);
                document.getElementById('accuracy-counter').setAttribute('data-target', 98);
            }
        } else {
            // –ï—Å–ª–∏ —Å—á–µ—Ç—á–∏–∫–∏ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω—ã, –ø—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º data-target
            document.getElementById('tests-counter')?.setAttribute('data-target', stats.testsCreated || 0);
            document.getElementById('questions-counter')?.setAttribute('data-target', stats.questionsGenerated || 0);
            document.getElementById('accuracy-counter')?.setAttribute('data-target', 98);
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ª–∏–º–∏—Ç–æ–≤
     */
    updateLimitsDisplay(stats) {
        console.log('üéØ [LIMITS] –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ª–∏–º–∏—Ç–æ–≤:', stats);
        
        const limitNotice = document.getElementById('free-tests-limit');
        if (!limitNotice) {
            console.error('‚ùå [LIMITS] –≠–ª–µ–º–µ–Ω—Ç free-tests-limit –Ω–µ –Ω–∞–π–¥–µ–Ω!');
            return;
        }
        
        const limitText = limitNotice.querySelector('.limit-text');
        const limitIcon = limitNotice.querySelector('.limit-icon');
        
        if (!limitText || !limitIcon) {
            console.error('‚ùå [LIMITS] –î–æ—á–µ—Ä–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!', {
                limitText: !!limitText,
                limitIcon: !!limitIcon
            });
            return;
        }
        
        const maxTests = stats.maxTests || (stats.isPremium ? 50 : 5);
        const remaining = stats.testsRemaining >= 0 ? stats.testsRemaining : maxTests;
        
        if (stats.isPremium) {
            limitNotice.style.display = 'block';
            limitNotice.style.background = 'linear-gradient(135deg, #2d5aa0, #1e3c72)';
            limitNotice.classList.add('premium-status');
            limitIcon.textContent = '‚≠ê';
            limitText.innerHTML = `<span style="color: #ffd700;">Premium:</span> –°–µ–≥–æ–¥–Ω—è –æ—Å—Ç–∞–ª–æ—Å—å —Ç–µ—Å—Ç–æ–≤: <strong>${remaining}</strong>/${maxTests}`;
        } else {
            limitNotice.style.display = 'block';
            limitNotice.style.background = 'linear-gradient(135deg, var(--info-color), var(--primary-dark))';
            limitNotice.classList.remove('premium-status');
            limitIcon.textContent = '‚ö°';
            limitText.innerHTML = `–°–µ–≥–æ–¥–Ω—è –æ—Å—Ç–∞–ª–æ—Å—å —Ç–µ—Å—Ç–æ–≤: <strong>${remaining}</strong>/${maxTests}`;
            
            if (remaining === 0) {
                limitNotice.style.background = 'linear-gradient(135deg, var(--danger-color), #d32f2f)';
                limitIcon.textContent = '‚õî';
                limitText.innerHTML = '<strong>–õ–∏–º–∏—Ç —Ç–µ—Å—Ç–æ–≤ –∏—Å—á–µ—Ä–ø–∞–Ω!</strong> –ü–æ–ª—É—á–∏—Ç–µ Premium –¥–ª—è 50 —Ç–µ—Å—Ç–æ–≤ –≤ –¥–µ–Ω—å';
                
                // –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–∞
                const createBtn = document.getElementById('create-test-btn');
                createBtn.style.opacity = '0.6';
                createBtn.style.cursor = 'not-allowed';
                createBtn.onclick = (e) => {
                    e.preventDefault();
                    e.stopPropagation();
                    this.showLimitModal();
                    return false;
                };
            } else {
                // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –µ—Å–ª–∏ –ª–∏–º–∏—Ç –Ω–µ –∏—Å—á–µ—Ä–ø–∞–Ω
                const createBtn = document.getElementById('create-test-btn');
                createBtn.style.opacity = '1';
                createBtn.style.cursor = 'pointer';
                createBtn.onclick = null;
            }
        }
    }

    /**
     * –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –æ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–∞
     */
    showLimitModal() {
        const content = `
            <div class="limit-modal">
                <h3>‚ö†Ô∏è –õ–∏–º–∏—Ç –∏—Å—á–µ—Ä–ø–∞–Ω</h3>
                <p>–í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –¥–Ω–µ–≤–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞ –≤ 5 —Ç–µ—Å—Ç–æ–≤ –¥–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –≤–µ—Ä—Å–∏–∏.</p>
                <div class="limit-options">
                    <h4>–ß—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:</h4>
                    <ul>
                        <li>üïí –ü–æ–¥–æ–∂–¥–∞—Ç—å –¥–æ –∑–∞–≤—Ç—Ä–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞</li>
                        <li>‚≠ê –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –ø—Ä–µ–º–∏—É–º –¥–ª—è –±–µ–∑–ª–∏–º–∏—Ç–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞</li>
                        <li>üìã –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ø—Ä–æ–π—Ç–∏ –≥–æ—Ç–æ–≤—ã–µ —Ç–µ—Å—Ç—ã</li>
                    </ul>
                </div>
                <div class="limit-actions">
                    <button class="btn secondary-btn" onclick="window.iceqBase.hideModal()">
                        –ü–æ–Ω—è—Ç–Ω–æ
                    </button>
                    <button class="btn primary-btn" onclick="document.getElementById('premium-btn').click()">
                        –ü–æ–ª—É—á–∏—Ç—å –ü—Ä–µ–º–∏—É–º
                    </button>
                </div>
            </div>
        `;
        
        window.iceqBase.showModal(content);
    }

    /**
     * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
     */
    saveUserStats(stats) {
        localStorage.setItem('iceq_user_stats', JSON.stringify(stats));
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤
     */
    canCreateTest() {
        const stats = this.getUserStatsFromLocalStorage();
        return stats.isPremium || stats.testsRemaining > 0;
    }

    /**
     * –î–µ–∫—Ä–µ–º–µ–Ω—Ç —Å—á–µ—Ç—á–∏–∫–∞ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è —Ç–µ—Å—Ç–æ–≤
     */
    decrementTestLimit() {
        const stats = this.getUserStatsFromLocalStorage();
        if (!stats.isPremium && stats.testsRemaining > 0) {
            stats.testsRemaining--;
            this.saveUserStats(stats);
            this.updateLimitsDisplay(stats);
        }
    }

    /**
     * –ò–Ω–∫—Ä–µ–º–µ–Ω—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
     */
    incrementTestsCreated() {
        const stats = this.getUserStatsFromLocalStorage();
        stats.testsCreated++;
        this.saveUserStats(stats);
    }

    /**
     * –ò–Ω–∫—Ä–µ–º–µ–Ω—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
     */
    incrementQuestionsGenerated(count) {
        const stats = this.getUserStatsFromLocalStorage();
        stats.questionsGenerated += count;
        this.saveUserStats(stats);
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–∏–º–∏—Ç–æ–≤ –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å–∞
     */
    updateLimitsAfterPremiumChange(isPremium) {
        console.log('üîÑ [PREMIUM] –û–±–Ω–æ–≤–ª—è–µ–º –ª–∏–º–∏—Ç—ã –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å–∞:', isPremium);
        
        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ localStorage (—É–∂–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –≤ base.js)
        const stats = this.getUserStatsFromLocalStorage();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        this.updateLimitsDisplay(stats);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        const message = isPremium ? 
            `üéâ Premium –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! –ü–æ–ª—É—á–∏–ª–∏ –ø–æ–ª–Ω—ã–π –ª–∏–º–∏—Ç: 50/50 —Ç–µ—Å—Ç–æ–≤ –≤ –¥–µ–Ω—å` :
            `üì± –ü–µ—Ä–µ–∫–ª—é—á–∏–ª–∏—Å—å –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø–ª–∞–Ω: 5/5 —Ç–µ—Å—Ç–æ–≤ –≤ –¥–µ–Ω—å`;
            
        if (window.iceqBase && window.iceqBase.showToast) {
            window.iceqBase.showToast(message, isPremium ? 'success' : 'info');
        }
    }


}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    console.log('üåü [GLOBAL] DOM –∑–∞–≥—Ä—É–∂–µ–Ω, –Ω–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é HomePage...');
    
    const initHomePage = () => {
        if (window.iceqBase) {
            console.log('‚úÖ [GLOBAL] iceqBase –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º HomePage...');
            window.homePage = new HomePage();
        } else {
            console.log('‚è≥ [GLOBAL] iceqBase –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤, –∂–¥–µ–º...');
            setTimeout(initHomePage, 100);
        }
    };
    
    // –î–∞–µ–º –Ω–µ–º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É base.js
    setTimeout(initHomePage, 50);
});

// –î–æ–±–∞–≤–ª—è–µ–º CSS –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ (–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π)
const homePageStyle = document.createElement('style');
homePageStyle.textContent = `
    .ripple-effect {
        position: absolute;
        border-radius: 50%;
        background: rgba(255, 255, 255, 0.3);
        transform: scale(0);
        animation: ripple 0.3s linear;
        pointer-events: none;
        width: 20px;
        height: 20px;
        margin-left: -10px;
        margin-top: -10px;
    }
    
    @keyframes ripple {
        to {
            transform: scale(4);
            opacity: 0;
        }
    }
    
    .limit-modal h3 {
        color: var(--danger-color);
        margin-bottom: 15px;
    }
    
    .limit-options {
        margin: 20px 0;
    }
    
    .limit-options ul {
        margin: 10px 0;
        padding-left: 20px;
    }
    
    .limit-options li {
        margin: 8px 0;
        color: var(--text-muted);
    }
    
    .limit-actions {
        display: flex;
        gap: 15px;
        justify-content: center;
        margin-top: 20px;
    }
    
    .limit-actions .btn {
        min-width: 120px;
    }
`;
document.head.appendChild(homePageStyle); 