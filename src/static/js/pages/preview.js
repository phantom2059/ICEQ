/**
 * ICEQ (2025) - –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–µ—Å—Ç–∞
 */

class PreviewTestPage {
    constructor() {
        this.testData = null;
        this.isPremium = false;
        
        this.init();
    }
    
    init() {
        console.log('üèóÔ∏è [PREVIEW] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞...');
        
        this.initElements();
        this.checkPremiumStatus();
        this.loadTestData();
        this.initEventListeners();
        
        console.log('‚úÖ [PREVIEW] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    }
    
    initElements() {
        // –≠–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ—Å—Ç–µ
        this.questionsCountEl = document.getElementById('questions-count');
        this.usedModelEl = document.getElementById('used-model');
        this.creationTimeEl = document.getElementById('creation-time');
        
        // –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        this.startTestBtn = document.getElementById('start-test-btn');
        this.editTestBtn = document.getElementById('edit-test-btn');
        this.exportTestBtn = document.getElementById('export-test-btn');
        this.createNewBtn = document.getElementById('create-new-btn');
        
        // –≠–ª–µ–º–µ–Ω—Ç—ã –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
        this.questionsPreview = document.getElementById('questions-preview');
        this.questionsList = document.getElementById('questions-list');
        
        // –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        this.loadingIndicator = document.getElementById('loading-indicator');
    }
    
    loadTestData() {
        console.log('üìä [PREVIEW] –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–∞...');
        
        try {
            const savedData = localStorage.getItem('iceq_generated_test');
            if (!savedData) {
                console.error('‚ùå [PREVIEW] –ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–∞');
                this.showError('–î–∞–Ω–Ω—ã–µ —Ç–µ—Å—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã', '–í–µ—Ä–Ω–∏—Ç–µ—Å—å –∫ —Å–æ–∑–¥–∞–Ω–∏—é —Ç–µ—Å—Ç–∞');
                return;
            }
            
            this.testData = JSON.parse(savedData);
            console.log('‚úÖ [PREVIEW] –î–∞–Ω–Ω—ã–µ —Ç–µ—Å—Ç–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', this.testData);
            
            this.fillTestInfo();
            this.showPreview(); // –°—Ä–∞–∑—É –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
            
        } catch (error) {
            console.error('‚ùå [PREVIEW] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
            this.showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö', '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç –∑–∞–Ω–æ–≤–æ');
        }
    }
    
    fillTestInfo() {
        console.log('üìù [PREVIEW] –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ—Å—Ç–µ...');
        
        if (!this.testData || !this.testData.questions) {
            console.error('‚ùå [PREVIEW] –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ç–µ—Å—Ç–∞');
            return;
        }
        
        // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤
        if (this.questionsCountEl) {
            this.questionsCountEl.textContent = this.testData.questions.length;
        }
        
        // –ú–æ–¥–µ–ª—å
        if (this.usedModelEl && this.testData.settings) {
            const modelNames = {
                'deepseek': 'DeepSeek',
                'qwen': 'Qwen',
                'iceq': 'ICEQ'
            };
            this.usedModelEl.textContent = modelNames[this.testData.settings.model] || this.testData.settings.model;
        }
        
        // –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è
        if (this.creationTimeEl) {
            const createdAt = new Date(this.testData.createdAt);
            const now = new Date();
            const diffMinutes = Math.floor((now - createdAt) / (1000 * 60));
            
            if (diffMinutes < 1) {
                this.creationTimeEl.textContent = '–¢–æ–ª—å–∫–æ —á—Ç–æ';
            } else if (diffMinutes < 60) {
                this.creationTimeEl.textContent = `${diffMinutes} –º–∏–Ω –Ω–∞–∑–∞–¥`;
            } else {
                this.creationTimeEl.textContent = createdAt.toLocaleDateString();
            }
        }
        
        console.log('‚úÖ [PREVIEW] –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ—Å—Ç–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞');
    }
    
    initEventListeners() {
        // –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        if (this.startTestBtn) {
            this.startTestBtn.addEventListener('click', () => this.startTest());
        }
        
        if (this.editTestBtn) {
            this.editTestBtn.addEventListener('click', () => this.editTest());
        }
        
        if (this.exportTestBtn) {
            this.exportTestBtn.addEventListener('click', () => this.exportTest());
        }
        
        if (this.createNewBtn) {
            this.createNewBtn.addEventListener('click', () => this.createNewTest());
        }
    }
    
    showPreview() {
        console.log('üëÅÔ∏è [PREVIEW] –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –≤–æ–ø—Ä–æ—Å–æ–≤...');
        
        if (!this.testData || !this.testData.questions) {
            console.error('‚ùå [PREVIEW] –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞');
            return;
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        this.showLoading();
        
        setTimeout(() => {
            try {
                // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
                this.questionsList.innerHTML = '';
                
                // –î–æ–±–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å—ã
                this.testData.questions.forEach((question, index) => {
                    const questionEl = this.createQuestionElement(question, index + 1);
                    this.questionsList.appendChild(questionEl);
                });
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
                this.questionsPreview.style.display = 'block';
                
                this.hideLoading();
                console.log('‚úÖ [PREVIEW] –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –ø–æ–∫–∞–∑–∞–Ω');
                
            } catch (error) {
                console.error('‚ùå [PREVIEW] –û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞:', error);
                this.hideLoading();
                if (window.iceqBase) {
                    window.iceqBase.showToast('–û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤', 'error');
                }
            }
        }, 500);
    }
    
    createQuestionElement(question, index) {
        const questionDiv = document.createElement('div');
        questionDiv.className = 'question-item';
        
        // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≤–æ–ø—Ä–æ—Å–∞
        const questionTitle = document.createElement('h4');
        questionTitle.textContent = `–í–æ–ø—Ä–æ—Å ${index}`;
        questionDiv.appendChild(questionTitle);
        
        // –¢–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞
        const questionText = document.createElement('div');
        questionText.className = 'question-text';
        questionText.textContent = question.question;
        questionDiv.appendChild(questionText);
        
        // –°–ø–∏—Å–æ–∫ –æ—Ç–≤–µ—Ç–æ–≤
        const answersList = document.createElement('div');
        answersList.className = 'answers-list';
        
        question.answers.forEach((answer, answerIndex) => {
            const answerItem = document.createElement('div');
            answerItem.className = 'answer-item';
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–∞
            if (answer.correct || answer.is_correct) {
                answerItem.classList.add('correct-answer');
            }
            
            const marker = document.createElement('span');
            marker.className = 'answer-marker';
            marker.textContent = String.fromCharCode(65 + answerIndex); // A, B, C, D
            
            const answerText = document.createElement('span');
            answerText.className = 'answer-text';
            answerText.textContent = answer.text || answer.answer;
            
            answerItem.appendChild(marker);
            answerItem.appendChild(answerText);
            answersList.appendChild(answerItem);
        });
        
        questionDiv.appendChild(answersList);
        
        // –û–±—ä—è—Å–Ω–µ–Ω–∏–µ (–µ—Å–ª–∏ –µ—Å—Ç—å)
        if (question.explanation) {
            const explanation = document.createElement('div');
            explanation.className = 'explanation';
            explanation.textContent = `–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: ${question.explanation}`;
            questionDiv.appendChild(explanation);
        }
        
        return questionDiv;
    }
    
    startTest() {
        console.log('üöÄ [PREVIEW] –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞...');
        
        if (!this.testData) {
            if (window.iceqBase) {
                window.iceqBase.showToast('–î–∞–Ω–Ω—ã–µ —Ç–µ—Å—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã', 'error');
            }
            return;
        }
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ localStorage –∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–∞
        try {
            localStorage.setItem('iceq_current_test', JSON.stringify(this.testData));
            window.location.href = '/take';
        } catch (error) {
            console.error('‚ùå [PREVIEW] –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–∞:', error);
            if (window.iceqBase) {
                window.iceqBase.showToast('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–∞', 'error');
            }
        }
    }
    
    editTest() {
        console.log('‚úèÔ∏è [PREVIEW] –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞...');
        
        if (!this.isPremium) {
            if (window.iceqBase) {
                window.iceqBase.showToast('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ —Å –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–æ–π', 'warning');
            }
            return;
        }
        
        // –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–µ–º–∏—É–º - –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä
        this.openTestEditor();
    }
    
    exportTest() {
        console.log('üìÅ [PREVIEW] –≠–∫—Å–ø–æ—Ä—Ç —Ç–µ—Å—Ç–∞...');
        
        if (!this.testData) {
            if (window.iceqBase) {
                window.iceqBase.showToast('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞', 'error');
            }
            return;
        }
        
        // –°–æ–∑–¥–∞–µ–º JSON –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
        const exportData = {
            title: this.testData.title || '–¢–µ—Å—Ç ICEQ',
            questions: this.testData.questions,
            createdAt: this.testData.createdAt,
            settings: this.testData.settings
        };
        
        // –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
        const blob = new Blob([JSON.stringify(exportData, null, 2)], { type: 'application/json' });
        const url = URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = `iceq-test-${new Date().toISOString().split('T')[0]}.json`;
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        URL.revokeObjectURL(url);
        
        if (window.iceqBase) {
            window.iceqBase.showToast('–¢–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω', 'success');
        }
    }
    
    createNewTest() {
        console.log('‚ú® [PREVIEW] –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–µ—Å—Ç–∞...');
        
        // –û—á–∏—â–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–æ–∑–¥–∞–Ω–∏—é
        localStorage.removeItem('iceq_generated_test');
        window.location.href = '/create';
    }
    
    showError(title, message) {
        console.error(`‚ùå [PREVIEW] ${title}: ${message}`);
        
        const container = document.querySelector('.preview-container');
        container.innerHTML = `
            <div class="error-container">
                <div class="error-icon">üòû</div>
                <h2>${title}</h2>
                <p>${message}</p>
                <button class="btn primary-btn" onclick="window.location.href='/create'">
                    –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ç–µ—Å—Ç
                </button>
            </div>
        `;
    }
    
    showLoading() {
        if (this.loadingIndicator) {
            this.loadingIndicator.style.display = 'block';
        }
    }
    
    hideLoading() {
        if (this.loadingIndicator) {
            this.loadingIndicator.style.display = 'none';
        }
    }
    
    async checkPremiumStatus() {
        try {
            const response = await fetch('/api/premium_status', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            });
            
            if (response.ok) {
                const data = await response.json();
                this.isPremium = data.premium_active || false;
                this.updateUIForPremiumStatus();
            } else {
                this.isPremium = false;
            }
        } catch (error) {
            console.error('‚ùå [PREVIEW] –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å–∞:', error);
            this.isPremium = false;
        }
    }
    
    updateUIForPremiumStatus() {
        if (this.editTestBtn) {
            if (!this.isPremium) {
                // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞–∫ –ø—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏—è
                this.editTestBtn.classList.add('premium-feature');
                
                // –î–æ–±–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É –ø—Ä–µ–º–∏—É–º–∞
                const icon = this.editTestBtn.querySelector('.btn-icon');
                if (icon && !icon.querySelector('.premium-indicator')) {
                    const premiumIndicator = document.createElement('span');
                    premiumIndicator.className = 'premium-indicator';
                    premiumIndicator.innerHTML = '‚≠ê';
                    premiumIndicator.title = '–ü—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏—è';
                    icon.appendChild(premiumIndicator);
                }
            }
        }
    }
    
    openTestEditor() {
        console.log('üõ†Ô∏è [PREVIEW] –û—Ç–∫—Ä—ã—Ç–∏–µ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ —Ç–µ—Å—Ç–∞...');
        
        if (!this.testData) {
            if (window.iceqBase) {
                window.iceqBase.showToast('–î–∞–Ω–Ω—ã–µ —Ç–µ—Å—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã', 'error');
            }
            return;
        }
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        localStorage.setItem('iceq_test_for_edit', JSON.stringify(this.testData));
        
        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        window.location.href = '/edit';
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', () => {
    new PreviewTestPage();
});
